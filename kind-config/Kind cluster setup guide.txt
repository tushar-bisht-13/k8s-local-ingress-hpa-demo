Kind cluster setup guide:

1) Install KIND and kubectl using the provided script:

#################################################################################################
#!/bin/bash

[ $(uname -m) = x86_64 ] && curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-amd64
chmod +x ./kind
sudo mv ./kind /usr/local/bin/kind

VERSION="v1.30.0"
URL="https://dl.k8s.io/release/${VERSION}/bin/linux/amd64/kubectl"
INSTALL_DIR="/usr/local/bin"

curl -LO "$URL"
chmod +x kubectl
sudo mv kubectl $INSTALL_DIR/
kubectl version --client

rm -f kubectl
rm -rf kind

echo "kind & kubectl installation complete."

##################################################################################################

If permission issue occurs when doing docker ps run below commands:
- sudo usermod -aG docker $USER 
- newgrp docker

2) Setting Up the KIND Cluster

-> Create a kind-cluster-config.yaml file:

kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
nodes:
- role: control-plane
  image: kindest/node:v1.31.2
  kubeadmConfigPatches:                # give it the ingressâ€‘ready label, too
  - |
    kind: InitConfiguration
    nodeRegistration:
      kubeletExtraArgs:
        node-labels: "ingress-ready=true"
  extraPortMappings:
  - containerPort: 80
    hostPort: 80
    protocol: TCP
  - containerPort: 443
    hostPort: 443
    protocol: TCP
- role: worker
  image: kindest/node:v1.31.2

 -> Create the cluster using the configuration file:
 "kind create cluster --config kind-cluster-config.yaml --name my-kind-cluster"
 
 -> Verify the cluster:

"kubectl get nodes"
"kubectl cluster-info"

3) Delete kind cluster:

"kind delete cluster --name my-kind-cluster"
